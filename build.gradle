import org.ajoberstar.gradle.git.release.semver.*
import org.ajoberstar.gradle.git.release.opinion.Strategies

plugins {
    id 'de.gliderpilot.semantic-release' version '1.2.0'
    id 'maven'
}
apply plugin: 'groovy'

apply plugin: 'maven-publish'
group = 'com.praqma'

repositories {
    mavenCentral()
}

release {
    versionStrategy semanticRelease.releaseStrategy.copyWith(
            // the type is important, without type you would again replace the default strategy
            type: 'rc',
            selector: { SemVerStrategyState state ->
                state.currentBranch.name ==~ /integration.*/ &&
                        semanticRelease.semanticStrategy.canRelease(state) &&
                        state.nearestVersion.distanceFromAny &&
                        !state.isRepoDirty() &&
                        project.gradle.startParameter.taskNames.find { it == 'release' }
            },
            preReleaseStrategy: StrategyUtil.all({ it.copyWith(inferredPreRelease: 'rc') } as PartialSemVerStrategy,
                    Strategies.PreRelease.COUNT_INCREMENTED)
    )
}

println "Current tag: " + grgit.tag.list()[grgit.tag.list().size() - 1].getName()

def branchName = "${grgit.branch.current.name}"
def suffix = (branchName == "integration" || branchName == "master")? "": "-dev.${grgit.head().abbreviatedId}"
println "Inferred version: " + project.version
println "branch Name: " + branchName

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
}